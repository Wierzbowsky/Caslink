//******************************************************************************
//  FILE..........: CASLINK3.H
//  COPYRIGHT.....: Copyright (C) 1999-2022 Alexey Podrezov
//  VERSION.......: 3.2
//  DESCRIPTION...: Cassette Interface Emulation utility for MSX computers
//  NOTES.........: Encodes/decodes files to be transfered through MSX cassette interface
//******************************************************************************

// Defaults
#define	STARTBIT				0
#define	STOPBIT					1
#define	SILENCE					0x80
#define	SILENCE16				0
#define HIGHAMPLITUDE			0xFF
#define LOWAMPLITUDE			0
#define HIGHAMPLITUDE16			0x7FFF
#define LOWAMPLITUDE16			0x8000
#define TOLERANCELEVEL			0x10
#define TOLERANCELEVEL16		0x800
#define CASFILENAMELENGTH		6
#define WAVHEADEROFFSETVALUE	0x77
#define MINWAVINPUTFILELENGTH	1024L
#define MINENCINPUTFILELENGTH	5L
#define MAXSENCINPUTFILELENGTH	50000L
#define MAXMENCINPUTFILELENGTH	25000L
#define LENGTHCORRECTION		25
#define USERBUFFERLENGTH		1024
#define MAXSIGNALLEVEL			100

// Variables -------------------------------------------------------------------
HANDLE	hStdIn, hStdOut;
FILE	*InputFileHandle, *OutputFileHandle, *TmpFileHandle, *BatFileHandle;
char	InputFileName[30], OutputFileName[30], TmpFileName[30], BatFileName[30], MP3FileName[30];
char*	FileNamePointer[20];
unsigned char	BitStream[11], *InputMemPointer, *OutputMemPointer, FirstPauseLength, MiddlePauseLength, FinalPauseLength, SilenceByte, EncodeDecode, FileType, AddressBuffer[6], RomCRC, ConvertRatio;
unsigned int	WavSampleRate, SignalLevel, MSXInterfaceSpeed, LongHeaderLength, ShortHeaderLength, SampleScale, SpeedScale, k, l, ConvertFlag, ConvertToMP3, MP3Kbps, InvertedWaveform;
unsigned short	RomBegin, RomEnd, RomStart, *InputMemPointer16;
size_t	InputFileLength, OutputFileLength, TmpFileLength, BytesRead, BytesWritten, FileOffset, ExtraBytes, InputFileLengthTmp;
size_t	i, a, b;
DWORD	j, MoreExtraBytes, Result;
static char szLameEXE[]="lame.exe";
static char szLameDLL[]="lame_enc.dll";

// Wave header
struct {
	char	WavHeaderID[4];		// 'RIFF'
	DWORD	SampleLength;
	char	MMFileType[4];		// 'WAVE'
	char	FormatID[4];		// 'fmt '
	DWORD	FormatSize;
	WORD	FormatTag;
	WORD	NumChannels;
	DWORD	SamplesPerSec;
	DWORD	BytesPerSec;
	WORD	BlkAllign;
	WORD	BitsPerSample;
	char	DataID[4];			// 'data'
	DWORD	PureSampleLength;
	} WavHeader;

// Headers
static unsigned char	BasicFileHeaderID[10] = {0xd3, 0xd3, 0xd3, 0xd3, 0xd3, 0xd3, 0xd3, 0xd3, 0xd3, 0xd3};
static unsigned char	BinFileHeaderID[10] = {0xd0, 0xd0, 0xd0, 0xd0, 0xd0, 0xd0, 0xd0, 0xd0, 0xd0, 0xd0};
static unsigned char	DataFileHeaderID[10] = {0xea, 0xea, 0xea, 0xea, 0xea, 0xea, 0xea, 0xea, 0xea, 0xea};
unsigned char	BitEncodingLength, FileHeaderIDLength;
static char		NameBuffer[CASFILENAMELENGTH], Buffer[USERBUFFERLENGTH], ch;

// Patterns of 1200Hz and 2400Hz waves - samples for 11025Hz file. if bigger sampling rate is used, multiply by SampleScale variable
static unsigned char	ZeroBit[2][10] = {
	{LOWAMPLITUDE, LOWAMPLITUDE, LOWAMPLITUDE, LOWAMPLITUDE, LOWAMPLITUDE, HIGHAMPLITUDE, HIGHAMPLITUDE, HIGHAMPLITUDE, HIGHAMPLITUDE, HIGHAMPLITUDE},
	{LOWAMPLITUDE, LOWAMPLITUDE, HIGHAMPLITUDE, HIGHAMPLITUDE, HIGHAMPLITUDE, LOWAMPLITUDE, LOWAMPLITUDE, HIGHAMPLITUDE, HIGHAMPLITUDE, HIGHAMPLITUDE}
	};
static unsigned char	SetBit[2][10] = {
	{LOWAMPLITUDE, LOWAMPLITUDE, HIGHAMPLITUDE, HIGHAMPLITUDE, HIGHAMPLITUDE, LOWAMPLITUDE, LOWAMPLITUDE, HIGHAMPLITUDE, HIGHAMPLITUDE, HIGHAMPLITUDE},
	{LOWAMPLITUDE, HIGHAMPLITUDE, LOWAMPLITUDE, HIGHAMPLITUDE, LOWAMPLITUDE, HIGHAMPLITUDE, LOWAMPLITUDE, HIGHAMPLITUDE, LOWAMPLITUDE, HIGHAMPLITUDE}
	};

// BIN/ROM loaders and preloader
static unsigned char	BINLoader[284] = {
	0xC3, 0x30, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5B, 0x43, 0x61, 0x73, 0x4C, 0x69, 0x6E, 0x6B, 0x33, 0x5D, 0x20, 0x4C, 0x6F, 0x61, 0x64,
	0x69, 0x6E, 0x67, 0x20, 0x66, 0x61, 0x69, 0x6C, 0x65, 0x64, 0x3A, 0x20, 0x43, 0x52, 0x43, 0x20, 0x45, 0x52, 0x52, 0x4F, 0x52, 0x21, 0x00, 0xF3, 0x2A,
	0x03, 0x82, 0xED, 0x5B, 0x05, 0x82, 0xEB, 0x37, 0x3F, 0xED, 0x52, 0xE5, 0xC1, 0x21, 0x1C, 0x83, 0xAF, 0xF5, 0xF1, 0x86, 0x23, 0x0B, 0xF5, 0x79, 0xB7,
	0x20, 0xF7, 0x78, 0xB7, 0x20, 0xF3, 0xF1, 0x47, 0x21, 0x09, 0x82, 0x7E, 0xB8, 0xCA, 0x9A, 0x82, 0xFB, 0xCD, 0x6C, 0x00, 0x3E, 0x0F, 0x21, 0xE9, 0xF3,
	0x77, 0x3E, 0x08, 0x23, 0x77, 0x23, 0x77, 0xCD, 0x62, 0x00, 0xAF, 0xCD, 0xC3, 0x00, 0xCD, 0xCF, 0x00, 0x21, 0x01, 0x01, 0xCD, 0xC6, 0x00, 0x11, 0x0A,
	0x82, 0x1A, 0xB7, 0x28, 0x0A, 0x13, 0xCD, 0xA2, 0x00, 0x24, 0xCD, 0xC6, 0x00, 0x18, 0xF2, 0x21, 0x03, 0x01, 0xCD, 0xC6, 0x00, 0xCD, 0xC0, 0x00, 0xCD,
	0x56, 0x01, 0xFB, 0xC9, 0xF3, 0x2A, 0x07, 0x82, 0xE5, 0x21, 0x1C, 0x83, 0xED, 0x5B, 0x03, 0x82, 0x7C, 0xBA, 0x38, 0x1D, 0x20, 0x04, 0x7D, 0xBB, 0x38,
	0x17, 0x21, 0xDE, 0x82, 0x11, 0xFA, 0x82, 0xEB, 0x37, 0x3F, 0xED, 0x52, 0x44, 0x4D, 0x21, 0xDE, 0x82, 0x11, 0x60, 0xF5, 0xD5, 0xED, 0xB0, 0xC9, 0x21,
	0xF9, 0x82, 0x11, 0x1D, 0x83, 0xEB, 0x37, 0x3F, 0xED, 0x52, 0x44, 0x4D, 0x21, 0xF9, 0x82, 0x11, 0x60, 0xF5, 0xD5, 0xED, 0xB0, 0xC9, 0x2A, 0x03, 0x82,
	0xED, 0x5B, 0x05, 0x82, 0xEB, 0x37, 0x3F, 0xED, 0x52, 0x44, 0x4D, 0x21, 0x1C, 0x83, 0xED, 0x5B, 0x03, 0x82, 0x03, 0xED, 0xB0, 0xFB, 0xC9, 0x00, 0x2A,
	0x03, 0x82, 0xED, 0x5B, 0x05, 0x82, 0xEB, 0x37, 0x3F, 0xED, 0x52, 0x44, 0x4D, 0x2A, 0x03, 0x82, 0x37, 0x3F, 0xED, 0x4A, 0xEB, 0x21, 0x1C, 0x83, 0x37,
	0x3F, 0xED, 0x4A, 0x03, 0xED, 0xB8, 0xFB, 0xC9, 0x00
	};

static unsigned char	ROMLoader[258] = {
	0xC3, 0x30, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5B, 0x43, 0x61, 0x73, 0x4C, 0x69, 0x6E, 0x6B, 0x33, 0x5D, 0x20, 0x4C, 0x6F, 0x61, 0x64,
	0x69, 0x6E, 0x67, 0x20, 0x66, 0x61, 0x69, 0x6C, 0x65, 0x64, 0x3A, 0x20, 0x43, 0x52, 0x43, 0x20, 0x45, 0x52, 0x52, 0x4F, 0x52, 0x21, 0x00, 0xF3, 0x2A,
	0x03, 0x90, 0xED, 0x5B, 0x05, 0x90, 0xEB, 0x37, 0x3F, 0xED, 0x52, 0xE5, 0xC1, 0x21, 0x02, 0x91, 0xAF, 0xF5, 0xF1, 0x86, 0x23, 0x0B, 0xF5, 0x79, 0xB7,
	0x20, 0xF7, 0x78, 0xB7, 0x20, 0xF3, 0xF1, 0x47, 0x21, 0x09, 0x90, 0x7E, 0xB8, 0xCA, 0x9A, 0x90, 0xFB, 0xCD, 0x6C, 0x00, 0x3E, 0x0F, 0x21, 0xE9, 0xF3,
	0x77, 0x3E, 0x08, 0x23, 0x77, 0x23, 0x77, 0xCD, 0x62, 0x00, 0xAF, 0xCD, 0xC3, 0x00, 0xCD, 0xCF, 0x00, 0x21, 0x01, 0x01, 0xCD, 0xC6, 0x00, 0x11, 0x0A,
	0x90, 0x1A, 0xB7, 0x28, 0x0A, 0x13, 0xCD, 0xA2, 0x00, 0x24, 0xCD, 0xC6, 0x00, 0x18, 0xF2, 0x21, 0x03, 0x01, 0xCD, 0xC6, 0x00, 0xCD, 0xC0, 0x00, 0xCD,
	0x56, 0x01, 0xFB, 0xC9, 0xF3, 0x3A, 0xFF, 0xFF, 0x2F, 0xE6, 0xF0, 0x4F, 0x0F, 0x0F, 0x0F, 0x0F, 0xE6, 0x0F, 0xB1, 0x32, 0xFF, 0xFF, 0xDB, 0xA8, 0xE6,
	0xF0, 0x47, 0x0F, 0x0F, 0x0F, 0x0F, 0xE6, 0x0F, 0xB0, 0xF5, 0xD3, 0xA8, 0x2A, 0x03, 0x90, 0x7A, 0xFE, 0x80, 0x38, 0x17, 0x21, 0xDA, 0x90, 0x11, 0x03,
	0x91, 0xEB, 0x37, 0x3F, 0xED, 0x52, 0x44, 0x4D, 0x21, 0xDA, 0x90, 0x11, 0x60, 0xF5, 0xD5, 0xED, 0xB0, 0xC9, 0x2A, 0x07, 0x90, 0xE5, 0x2A, 0x03, 0x90,
	0xED, 0x5B, 0x05, 0x90, 0xEB, 0x37, 0x3F, 0xED, 0x52, 0x44, 0x4D, 0x21, 0x02, 0x91, 0xED, 0xB0, 0xE1, 0x7C, 0xFE, 0x40, 0x38, 0x07, 0xF1, 0xE6, 0xFC,
	0xD3, 0xA8, 0xFB, 0xE9, 0xF1, 0xFB, 0xE9, 0x00
	};

static unsigned char	ROMLoaderRst[269] = {
	0xC3, 0x30, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5B, 0x43, 0x61, 0x73, 0x4C, 0x69, 0x6E, 0x6B, 0x33, 0x5D, 0x20, 0x4C, 0x6F, 0x61, 0x64,
	0x69, 0x6E, 0x67, 0x20, 0x66, 0x61, 0x69, 0x6C, 0x65, 0x64, 0x3A, 0x20, 0x43, 0x52, 0x43, 0x20, 0x45, 0x52, 0x52, 0x4F, 0x52, 0x21, 0x00, 0xF3, 0x2A,
	0x03, 0x90, 0xED, 0x5B, 0x05, 0x90, 0xEB, 0x37, 0x3F, 0xED, 0x52, 0xE5, 0xC1, 0x21, 0x0D, 0x91, 0xAF, 0xF5, 0xF1, 0x86, 0x23, 0x0B, 0xF5, 0x79, 0xB7,
	0x20, 0xF7, 0x78, 0xB7, 0x20, 0xF3, 0xF1, 0x47, 0x21, 0x09, 0x90, 0x7E, 0xB8, 0xCA, 0x9A, 0x90, 0xFB, 0xCD, 0x6C, 0x00, 0x3E, 0x0F, 0x21, 0xE9, 0xF3,
	0x77, 0x3E, 0x08, 0x23, 0x77, 0x23, 0x77, 0xCD, 0x62, 0x00, 0xAF, 0xCD, 0xC3, 0x00, 0xCD, 0xCF, 0x00, 0x21, 0x01, 0x01, 0xCD, 0xC6, 0x00, 0x11, 0x0A,
	0x90, 0x1A, 0xB7, 0x28, 0x0A, 0x13, 0xCD, 0xA2, 0x00, 0x24, 0xCD, 0xC6, 0x00, 0x18, 0xF2, 0x21, 0x03, 0x01, 0xCD, 0xC6, 0x00, 0xCD, 0xC0, 0x00, 0xCD,
	0x56, 0x01, 0xFB, 0xC9, 0xF3, 0x3A, 0xFF, 0xFF, 0x2F, 0xE6, 0xF0, 0x4F, 0x0F, 0x0F, 0x0F, 0x0F, 0xE6, 0x0F, 0xB1, 0x32, 0xFF, 0xFF, 0xDB, 0xA8, 0xE6,
	0xF0, 0x47, 0x0F, 0x0F, 0x0F, 0x0F, 0xE6, 0x0F, 0xB0, 0xF5, 0xD3, 0xA8, 0x2A, 0x03, 0x90, 0x7C, 0xFE, 0x40, 0x38, 0x04, 0xFE, 0x80, 0x38, 0x28, 0x21,
	0x00, 0x40, 0x3E, 0x41, 0x77, 0x3C, 0x23, 0x77, 0x23, 0xED, 0x5B, 0x07, 0x90, 0x73, 0x23, 0x72, 0x21, 0xEF, 0x90, 0x11, 0x0E, 0x91, 0xEB, 0x37, 0x3F,
	0xED, 0x52, 0x44, 0x4D, 0x21, 0xEF, 0x90, 0x11, 0x60, 0xF5, 0xD5, 0xED, 0xB0, 0xC9, 0x2A, 0x03, 0x90, 0xED, 0x5B, 0x05, 0x90, 0xEB, 0x37, 0x3F, 0xED,
	0x52, 0x44, 0x4D, 0x21, 0x0D, 0x91, 0xED, 0xB0, 0xF1, 0xE6, 0xFC, 0xD3, 0xA8, 0xF7, 0x00, 0x00, 0x00, 0x00, 0x00
	};

static unsigned char	ROM32KLoader1[377] = {
	0xC3, 0x76, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x62, 0x6C, 0x6F, 0x61, 0x64, 0x22, 0x63, 0x61, 0x73, 0x3A, 0x62, 0x69, 0x6E, 0x72,
	0x6F, 0x6D, 0x20, 0x70, 0x61, 0x72, 0x74, 0x20, 0x32, 0x20, 0x22, 0x2C, 0x72, 0x0D, 0x00, 0x5B, 0x43, 0x61, 0x73, 0x4C, 0x69, 0x6E, 0x6B, 0x33, 0x5D,
	0x20, 0x4C, 0x6F, 0x61, 0x64, 0x69, 0x6E, 0x67, 0x20, 0x66, 0x69, 0x6C, 0x65, 0x2C, 0x20, 0x70, 0x6C, 0x65, 0x61, 0x73, 0x65, 0x20, 0x77, 0x61, 0x69,
	0x74, 0x2E, 0x2E, 0x2E, 0x00, 0x5B, 0x43, 0x61, 0x73, 0x4C, 0x69, 0x6E, 0x6B, 0x33, 0x5D, 0x20, 0x4C, 0x6F, 0x61, 0x64, 0x69, 0x6E, 0x67, 0x20, 0x66,
	0x61, 0x69, 0x6C, 0x65, 0x64, 0x3A, 0x20, 0x43, 0x52, 0x43, 0x20, 0x45, 0x52, 0x52, 0x4F, 0x52, 0x21, 0x00, 0xF3, 0x2A, 0x03, 0x90, 0xED, 0x5B, 0x05,
	0x90, 0xEB, 0x37, 0x3F, 0xED, 0x52, 0xE5, 0xC1, 0x21, 0x79, 0x91, 0xAF, 0xF5, 0xF1, 0x86, 0x23, 0x0B, 0xF5, 0x79, 0xB7, 0x20, 0xF7, 0x78, 0xB7, 0x20,
	0xF3, 0xF1, 0x47, 0x21, 0x09, 0x90, 0x7E, 0xB8, 0xCA, 0xDF, 0x90, 0xFB, 0xCD, 0x6C, 0x00, 0x3E, 0x0F, 0x21, 0xE9, 0xF3, 0x77, 0x3E, 0x08, 0x23, 0x77,
	0x23, 0x77, 0xCD, 0x62, 0x00, 0xAF, 0xCD, 0xC3, 0x00, 0xCD, 0xCF, 0x00, 0x21, 0x01, 0x01, 0xCD, 0xC6, 0x00, 0x11, 0x50, 0x90, 0x1A, 0xB7, 0x28, 0x0A,
	0x13, 0xCD, 0xA2, 0x00, 0x24, 0xCD, 0xC6, 0x00, 0x18, 0xF2, 0x21, 0x03, 0x01, 0xCD, 0xC6, 0x00, 0xCD, 0xC0, 0x00, 0xCD, 0x56, 0x01, 0xC9, 0xFB, 0xCD,
	0x6C, 0x00, 0x3E, 0x0F, 0x21, 0xE9, 0xF3, 0x77, 0x3E, 0x04, 0x23, 0x77, 0x23, 0x77, 0xCD, 0x62, 0x00, 0xAF, 0xCD, 0xC3, 0x00, 0xCD, 0xCC, 0x00, 0x21,
	0x01, 0x01, 0xCD, 0xC6, 0x00, 0x11, 0x28, 0x90, 0x1A, 0xB7, 0x28, 0x0A, 0x13, 0xCD, 0xA2, 0x00, 0x24, 0xCD, 0xC6, 0x00, 0x18, 0xF2, 0x21, 0x03, 0x01,
	0xCD, 0xC6, 0x00, 0xCD, 0x56, 0x01, 0xF3, 0x21, 0xF0, 0xFB, 0x22, 0xF8, 0xF3, 0x22, 0xFA, 0xF3, 0x21, 0x0A, 0x90, 0x11, 0xF0, 0xFB, 0x01, 0x1D, 0x00,
	0xED, 0xB0, 0x21, 0x0D, 0xFC, 0x22, 0xF8, 0xF3, 0xF3, 0x3A, 0xFF, 0xFF, 0x2F, 0xF5, 0x4F, 0xE6, 0xF0, 0x47, 0x79, 0x0F, 0x0F, 0x0F, 0x0F, 0xE6, 0x0F,
	0xB0, 0x32, 0xFF, 0xFF, 0xDB, 0xA8, 0xF5, 0xE6, 0xF0, 0x47, 0x0F, 0x0F, 0x0F, 0x0F, 0xE6, 0x0F, 0xB0, 0xD3, 0xA8, 0x2A, 0x03, 0x90, 0xED, 0x5B, 0x05,
	0x90, 0xEB, 0x37, 0x3F, 0xED, 0x52, 0x44, 0x4D, 0x21, 0x79, 0x91, 0xED, 0x5B, 0x03, 0x90, 0xED, 0xB0, 0xF1, 0xD3, 0xA8, 0xF1, 0x32, 0xFF, 0xFF, 0xFB,
	0xC9, 0x00
	};

static unsigned char	ROM32KLoader2[263] = {
	0xC3, 0x30, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5B, 0x43, 0x61, 0x73, 0x4C, 0x69, 0x6E, 0x6B, 0x33, 0x5D, 0x20, 0x4C, 0x6F, 0x61, 0x64,
	0x69, 0x6E, 0x67, 0x20, 0x66, 0x61, 0x69, 0x6C, 0x65, 0x64, 0x3A, 0x20, 0x43, 0x52, 0x43, 0x20, 0x45, 0x52, 0x52, 0x4F, 0x52, 0x21, 0x00, 0xF3, 0x2A,
	0x03, 0x90, 0xED, 0x5B, 0x05, 0x90, 0xEB, 0x37, 0x3F, 0xED, 0x52, 0xE5, 0xC1, 0x21, 0x07, 0x91, 0xAF, 0xF5, 0xF1, 0x86, 0x23, 0x0B, 0xF5, 0x79, 0xB7,
	0x20, 0xF7, 0x78, 0xB7, 0x20, 0xF3, 0xF1, 0x47, 0x21, 0x09, 0x90, 0x7E, 0xB8, 0xCA, 0x99, 0x90, 0xFB, 0xCD, 0x6C, 0x00, 0x3E, 0x0F, 0x21, 0xE9, 0xF3,
	0x77, 0x3E, 0x08, 0x23, 0x77, 0x23, 0x77, 0xCD, 0x62, 0x00, 0xAF, 0xCD, 0xC3, 0x00, 0xCD, 0xCF, 0x00, 0x21, 0x01, 0x01, 0xCD, 0xC6, 0x00, 0x11, 0x0A,
	0x90, 0x1A, 0xB7, 0x28, 0x0A, 0x13, 0xCD, 0xA2, 0x00, 0x24, 0xCD, 0xC6, 0x00, 0x18, 0xF2, 0x21, 0x03, 0x01, 0xCD, 0xC6, 0x00, 0xCD, 0xC0, 0x00, 0xCD,
	0x56, 0x01, 0xC9, 0xF3, 0x3A, 0xFF, 0xFF, 0x2F, 0x4F, 0xE6, 0xF0, 0x47, 0x79, 0x0F, 0x0F, 0x0F, 0x0F, 0xE6, 0x0F, 0xB0, 0x32, 0xFF, 0xFF, 0xDB, 0xA8,
	0xE6, 0xF0, 0x47, 0x0F, 0x0F, 0x0F, 0x0F, 0xE6, 0x0F, 0xB0, 0xF5, 0xD3, 0xA8, 0x2A, 0x03, 0x90, 0x7C, 0xFE, 0x80, 0x38, 0x17, 0x21, 0xDB, 0x90, 0x11,
	0x08, 0x91, 0xEB, 0x37, 0x3F, 0xED, 0x52, 0x44, 0x4D, 0x21, 0xDB, 0x90, 0x11, 0x60, 0xF5, 0xD5, 0xED, 0xB0, 0xC9, 0x2A, 0x07, 0x90, 0xE5, 0x2A, 0x03,
	0x90, 0xED, 0x5B, 0x05, 0x90, 0xEB, 0x37, 0x3F, 0xED, 0x52, 0x44, 0x4D, 0x21, 0x07, 0x91, 0xED, 0x5B, 0x03, 0x90, 0xED, 0xB0, 0xE1, 0x7C, 0xFE, 0x40,
	0x38, 0x07, 0xF1, 0xE6, 0xFC, 0xD3, 0xA8, 0xFB, 0xE9, 0xF1, 0xFB, 0xE9, 0x00
	};

static unsigned char	ROM32KLoader2Rst[384] = {
	0xC3, 0x30, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5B, 0x43, 0x61, 0x73, 0x4C, 0x69, 0x6E, 0x6B, 0x33, 0x5D, 0x20, 0x4C, 0x6F, 0x61, 0x64,
	0x69, 0x6E, 0x67, 0x20, 0x66, 0x61, 0x69, 0x6C, 0x65, 0x64, 0x3A, 0x20, 0x43, 0x52, 0x43, 0x20, 0x45, 0x52, 0x52, 0x4F, 0x52, 0x21, 0x00, 0xF3, 0x2A,
	0x03, 0x90, 0xED, 0x5B, 0x05, 0x90, 0xEB, 0x37, 0x3F, 0xED, 0x52, 0xE5, 0xC1, 0x21, 0x80, 0x91, 0xAF, 0xF5, 0xF1, 0x86, 0x23, 0x0B, 0xF5, 0x79, 0xB7,
	0x20, 0xF7, 0x78, 0xB7, 0x20, 0xF3, 0xF1, 0x47, 0x21, 0x09, 0x90, 0x7E, 0xB8, 0xCA, 0x99, 0x90, 0xFB, 0xCD, 0x6C, 0x00, 0x3E, 0x0F, 0x21, 0xE9, 0xF3,
	0x77, 0x3E, 0x08, 0x23, 0x77, 0x23, 0x77, 0xCD, 0x62, 0x00, 0xAF, 0xCD, 0xC3, 0x00, 0xCD, 0xCF, 0x00, 0x21, 0x01, 0x01, 0xCD, 0xC6, 0x00, 0x11, 0x0A,
	0x90, 0x1A, 0xB7, 0x28, 0x0A, 0x13, 0xCD, 0xA2, 0x00, 0x24, 0xCD, 0xC6, 0x00, 0x18, 0xF2, 0x21, 0x03, 0x01, 0xCD, 0xC6, 0x00, 0xCD, 0xC0, 0x00, 0xCD,
	0x56, 0x01, 0xC9, 0xF3, 0x3A, 0xFF, 0xFF, 0x2F, 0x4F, 0xE6, 0xF0, 0x47, 0x79, 0x0F, 0x0F, 0x0F, 0x0F, 0xE6, 0x0F, 0xB0, 0x32, 0xFF, 0xFF, 0xDB, 0xA8,
	0xE6, 0xF0, 0x47, 0x0F, 0x0F, 0x0F, 0x0F, 0xE6, 0x0F, 0xB0, 0xF5, 0xD3, 0xA8, 0x2A, 0x03, 0x90, 0x7C, 0xFE, 0x80, 0x38, 0x79, 0x21, 0x80, 0x91, 0x11,
	0x64, 0x91, 0x7E, 0x12, 0x23, 0x11, 0x68, 0x91, 0x7E, 0x12, 0x23, 0x11, 0x6C, 0x91, 0x7E, 0x12, 0x2A, 0x07, 0x90, 0xE5, 0x22, 0x6F, 0x91, 0x7E, 0x11,
	0x73, 0x91, 0x12, 0x23, 0x7E, 0x11, 0x77, 0x91, 0x12, 0x23, 0x7E, 0x11, 0x7B, 0x91, 0x12, 0xE1, 0x3E, 0xC3, 0x77, 0x23, 0xE5, 0x21, 0x84, 0x91, 0x11,
	0x00, 0x80, 0x37, 0x3F, 0xED, 0x52, 0xED, 0x5B, 0x05, 0x90, 0x37, 0x3F, 0xED, 0x5A, 0xEB, 0xD5, 0x21, 0x5F, 0x91, 0x01, 0x21, 0x00, 0xED, 0xB0, 0x2A,
	0x05, 0x90, 0x11, 0x25, 0x00, 0x37, 0x3F, 0xED, 0x5A, 0x22, 0x05, 0x90, 0xD1, 0xE1, 0x7B, 0x77, 0x23, 0x7A, 0x77, 0x21, 0x3D, 0x91, 0x11, 0x60, 0x91,
	0xEB, 0x37, 0x3F, 0xED, 0x52, 0x44, 0x4D, 0x21, 0x3D, 0x91, 0x11, 0x60, 0xF5, 0xD5, 0xED, 0xB0, 0xC9, 0x2A, 0x03, 0x90, 0xED, 0x5B, 0x05, 0x90, 0xEB,
	0x37, 0x3F, 0xED, 0x52, 0x44, 0x4D, 0x21, 0x80, 0x91, 0xED, 0x5B, 0x03, 0x90, 0xED, 0xB0, 0xF1, 0xE6, 0xFC, 0xD3, 0xA8, 0xF7, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xF3, 0x21, 0x00, 0x80, 0x3E, 0x00, 0x77, 0x23, 0x3E, 0x00, 0x77, 0x23, 0x3E, 0x00, 0x77, 0x21, 0x00, 0x00, 0xE5, 0x3E, 0x00, 0x77, 0x23, 0x3E,
	0x00, 0x77, 0x23, 0x3E, 0x00, 0x77, 0xE1, 0xE9, 0x00
	};

static unsigned char	MultFileLoader[443] = {
	0xC3, 0x76, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x62, 0x6C, 0x6F, 0x61, 0x64, 0x22, 0x63, 0x61, 0x73, 0x3A, 0x62, 0x69, 0x6E, 0x72,
	0x6F, 0x6D, 0x20, 0x70, 0x61, 0x72, 0x74, 0x20, 0x31, 0x20, 0x22, 0x2C, 0x72, 0x0D, 0x00, 0x5B, 0x43, 0x61, 0x73, 0x4C, 0x69, 0x6E, 0x6B, 0x33, 0x5D,
	0x20, 0x4C, 0x6F, 0x61, 0x64, 0x69, 0x6E, 0x67, 0x20, 0x66, 0x69, 0x6C, 0x65, 0x2C, 0x20, 0x70, 0x6C, 0x65, 0x61, 0x73, 0x65, 0x20, 0x77, 0x61, 0x69,
	0x74, 0x2E, 0x2E, 0x2E, 0x00, 0x5B, 0x43, 0x61, 0x73, 0x4C, 0x69, 0x6E, 0x6B, 0x33, 0x5D, 0x20, 0x4C, 0x6F, 0x61, 0x64, 0x69, 0x6E, 0x67, 0x20, 0x66,
	0x61, 0x69, 0x6C, 0x65, 0x64, 0x3A, 0x20, 0x43, 0x52, 0x43, 0x20, 0x45, 0x52, 0x52, 0x4F, 0x52, 0x21, 0x00, 0xF3, 0x2A, 0x03, 0x82, 0xED, 0x5B, 0x05,
	0x82, 0xEB, 0x37, 0x3F, 0xED, 0x52, 0xE5, 0xC1, 0x21, 0xBB, 0x83, 0xAF, 0xF5, 0xF1, 0x86, 0x23, 0x0B, 0xF5, 0x79, 0xB7, 0x20, 0xF7, 0x78, 0xB7, 0x20,
	0xF3, 0xF1, 0x47, 0x21, 0x09, 0x82, 0x7E, 0xB8, 0xCA, 0xE0, 0x82, 0xFB, 0xCD, 0x6C, 0x00, 0x3E, 0x0F, 0x21, 0xE9, 0xF3, 0x77, 0x3E, 0x08, 0x23, 0x77,
	0x23, 0x77, 0xCD, 0x62, 0x00, 0xAF, 0xCD, 0xC3, 0x00, 0xCD, 0xCF, 0x00, 0x21, 0x01, 0x01, 0xCD, 0xC6, 0x00, 0x11, 0x50, 0x82, 0x1A, 0xB7, 0x28, 0x0A,
	0x13, 0xCD, 0xA2, 0x00, 0x24, 0xCD, 0xC6, 0x00, 0x18, 0xF2, 0x21, 0x03, 0x01, 0xCD, 0xC6, 0x00, 0xCD, 0xC0, 0x00, 0xCD, 0x56, 0x01, 0xFB, 0xC9, 0x00,
	0x00, 0xFB, 0xCD, 0x6C, 0x00, 0x3E, 0x0F, 0x21, 0xE9, 0xF3, 0x77, 0x3E, 0x04, 0x23, 0x77, 0x23, 0x77, 0xCD, 0x62, 0x00, 0xAF, 0xCD, 0xC3, 0x00, 0xCD,
	0xCC, 0x00, 0x21, 0x01, 0x01, 0xCD, 0xC6, 0x00, 0x11, 0x28, 0x82, 0x1A, 0xB7, 0x28, 0x0A, 0x13, 0xCD, 0xA2, 0x00, 0x24, 0xCD, 0xC6, 0x00, 0x18, 0xF2,
	0x21, 0x03, 0x01, 0xCD, 0xC6, 0x00, 0xCD, 0x56, 0x01, 0xF3, 0x21, 0xF0, 0xFB, 0x22, 0xF8, 0xF3, 0x22, 0xFA, 0xF3, 0x21, 0x0A, 0x82, 0x11, 0xF0, 0xFB,
	0x01, 0x1D, 0x00, 0xED, 0xB0, 0x21, 0x0D, 0xFC, 0x22, 0xF8, 0xF3, 0x00, 0x00, 0xF3, 0x2A, 0x07, 0x82, 0xE5, 0x21, 0xBB, 0x83, 0xED, 0x5B, 0x03, 0x82,
	0x7C, 0xBA, 0x38, 0x1D, 0x20, 0x04, 0x7D, 0xBB, 0x38, 0x17, 0x21, 0x7D, 0x83, 0x11, 0x99, 0x83, 0xEB, 0x37, 0x3F, 0xED, 0x52, 0x44, 0x4D, 0x21, 0x7D,
	0x83, 0x11, 0x60, 0xF5, 0xD5, 0xED, 0xB0, 0xC9, 0x21, 0x98, 0x83, 0x11, 0xBC, 0x83, 0xEB, 0x37, 0x3F, 0xED, 0x52, 0x44, 0x4D, 0x21, 0x98, 0x83, 0x11,
	0x60, 0xF5, 0xD5, 0xED, 0xB0, 0xC9, 0x2A, 0x03, 0x82, 0xED, 0x5B, 0x05, 0x82, 0xEB, 0x37, 0x3F, 0xED, 0x52, 0x44, 0x4D, 0x21, 0xBB, 0x83, 0xED, 0x5B,
	0x03, 0x82, 0x03, 0xED, 0xB0, 0xFB, 0xC9, 0x00, 0x2A, 0x03, 0x82, 0xED, 0x5B, 0x05, 0x82, 0xEB, 0x37, 0x3F, 0xED, 0x52, 0x44, 0x4D, 0x2A, 0x03, 0x82,
	0x37, 0x3F, 0xED, 0x4A, 0xEB, 0x21, 0xBB, 0x83, 0x37, 0x3F, 0xED, 0x4A, 0x03, 0xED, 0xB8, 0xFB, 0xC9, 0x00
	};

static unsigned char	BINROMPreLoader[161] = {
	0xC3, 0x49, 0x90, 0x1E, 0x62, 0x6C, 0x6F, 0x61, 0x64, 0x22, 0x63, 0x61, 0x73, 0x3A, 0x62, 0x69, 0x6E, 0x72, 0x6F, 0x6D, 0x20, 0x70, 0x61, 0x72, 0x74,
	0x20, 0x31, 0x20, 0x22, 0x2C, 0x72, 0x0D, 0x00, 0x5B, 0x43, 0x61, 0x73, 0x4C, 0x69, 0x6E, 0x6B, 0x33, 0x5D, 0x20, 0x4C, 0x6F, 0x61, 0x64, 0x69, 0x6E,
	0x67, 0x20, 0x66, 0x69, 0x6C, 0x65, 0x2C, 0x20, 0x70, 0x6C, 0x65, 0x61, 0x73, 0x65, 0x20, 0x77, 0x61, 0x69, 0x74, 0x2E, 0x2E, 0x2E, 0x00, 0xFB, 0xCD,
	0x6C, 0x00, 0x3E, 0x0F, 0x21, 0xE9, 0xF3, 0x77, 0x3E, 0x04, 0x23, 0x77, 0x23, 0x77, 0xCD, 0x62, 0x00, 0xAF, 0xCD, 0xC3, 0x00, 0xCD, 0xCC, 0x00, 0x21,
	0x01, 0x01, 0xCD, 0xC6, 0x00, 0x11, 0x21, 0x90, 0x1A, 0xB7, 0x28, 0x0A, 0x13, 0xCD, 0xA2, 0x00, 0x24, 0xCD, 0xC6, 0x00, 0x18, 0xF2, 0x21, 0x03, 0x01,
	0xCD, 0xC6, 0x00, 0xCD, 0x56, 0x01, 0xF3, 0x21, 0xF0, 0xFB, 0x22, 0xF8, 0xF3, 0x22, 0xFA, 0xF3, 0x21, 0x03, 0x90, 0x11, 0xF0, 0xFB, 0x01, 0x1D, 0x00,
	0xED, 0xB0, 0x21, 0x0D, 0xFC, 0x22, 0xF8, 0xF3, 0xFB, 0xC9, 0x00
	};

static unsigned char	ROM49KLoader1[377] = {
	0xC3, 0x76, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x62, 0x6C, 0x6F, 0x61, 0x64, 0x22, 0x63, 0x61, 0x73, 0x3A, 0x62, 0x69, 0x6E, 0x72,
	0x6F, 0x6D, 0x20, 0x70, 0x61, 0x72, 0x74, 0x20, 0x32, 0x20, 0x22, 0x2C, 0x72, 0x0D, 0x00, 0x5B, 0x43, 0x61, 0x73, 0x4C, 0x69, 0x6E, 0x6B, 0x33, 0x5D,
	0x20, 0x4C, 0x6F, 0x61, 0x64, 0x69, 0x6E, 0x67, 0x20, 0x66, 0x69, 0x6C, 0x65, 0x2C, 0x20, 0x70, 0x6C, 0x65, 0x61, 0x73, 0x65, 0x20, 0x77, 0x61, 0x69,
	0x74, 0x2E, 0x2E, 0x2E, 0x00, 0x5B, 0x43, 0x61, 0x73, 0x4C, 0x69, 0x6E, 0x6B, 0x33, 0x5D, 0x20, 0x4C, 0x6F, 0x61, 0x64, 0x69, 0x6E, 0x67, 0x20, 0x66,
	0x61, 0x69, 0x6C, 0x65, 0x64, 0x3A, 0x20, 0x43, 0x52, 0x43, 0x20, 0x45, 0x52, 0x52, 0x4F, 0x52, 0x21, 0x00, 0xF3, 0x2A, 0x03, 0x90, 0xED, 0x5B, 0x05,
	0x90, 0xEB, 0x37, 0x3F, 0xED, 0x52, 0xE5, 0xC1, 0x21, 0x79, 0x91, 0xAF, 0xF5, 0xF1, 0x86, 0x23, 0x0B, 0xF5, 0x79, 0xB7, 0x20, 0xF7, 0x78, 0xB7, 0x20,
	0xF3, 0xF1, 0x47, 0x21, 0x09, 0x90, 0x7E, 0xB8, 0xCA, 0xDF, 0x90, 0xFB, 0xCD, 0x6C, 0x00, 0x3E, 0x0F, 0x21, 0xE9, 0xF3, 0x77, 0x3E, 0x08, 0x23, 0x77,
	0x23, 0x77, 0xCD, 0x62, 0x00, 0xAF, 0xCD, 0xC3, 0x00, 0xCD, 0xCF, 0x00, 0x21, 0x01, 0x01, 0xCD, 0xC6, 0x00, 0x11, 0x50, 0x90, 0x1A, 0xB7, 0x28, 0x0A,
	0x13, 0xCD, 0xA2, 0x00, 0x24, 0xCD, 0xC6, 0x00, 0x18, 0xF2, 0x21, 0x03, 0x01, 0xCD, 0xC6, 0x00, 0xCD, 0xC0, 0x00, 0xCD, 0x56, 0x01, 0xC9, 0xFB, 0xCD,
	0x6C, 0x00, 0x3E, 0x0F, 0x21, 0xE9, 0xF3, 0x77, 0x3E, 0x04, 0x23, 0x77, 0x23, 0x77, 0xCD, 0x62, 0x00, 0xAF, 0xCD, 0xC3, 0x00, 0xCD, 0xCC, 0x00, 0x21,
	0x01, 0x01, 0xCD, 0xC6, 0x00, 0x11, 0x28, 0x90, 0x1A, 0xB7, 0x28, 0x0A, 0x13, 0xCD, 0xA2, 0x00, 0x24, 0xCD, 0xC6, 0x00, 0x18, 0xF2, 0x21, 0x03, 0x01,
	0xCD, 0xC6, 0x00, 0xCD, 0x56, 0x01, 0xF3, 0x21, 0xF0, 0xFB, 0x22, 0xF8, 0xF3, 0x22, 0xFA, 0xF3, 0x21, 0x0A, 0x90, 0x11, 0xF0, 0xFB, 0x01, 0x1D, 0x00,
	0xED, 0xB0, 0x21, 0x0D, 0xFC, 0x22, 0xF8, 0xF3, 0xF3, 0x3A, 0xFF, 0xFF, 0x2F, 0xF5, 0x4F, 0xE6, 0xF0, 0x47, 0x79, 0x0F, 0x0F, 0x0F, 0x0F, 0xE6, 0x0F,
	0xB0, 0x32, 0xFF, 0xFF, 0xDB, 0xA8, 0xF5, 0xE6, 0xF0, 0x47, 0x0F, 0x0F, 0x0F, 0x0F, 0xE6, 0x0F, 0xB0, 0xD3, 0xA8, 0x2A, 0x03, 0x90, 0xED, 0x5B, 0x05,
	0x90, 0xEB, 0x37, 0x3F, 0xED, 0x52, 0x44, 0x4D, 0x21, 0x79, 0x91, 0xED, 0x5B, 0x03, 0x90, 0xED, 0xB0, 0xF1, 0xD3, 0xA8, 0xF1, 0x32, 0xFF, 0xFF, 0xFB,
	0xC9, 0x00
	};

static unsigned char	ROM49KLoader2[377] = {
	0xC3, 0x76, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x62, 0x6C, 0x6F, 0x61, 0x64, 0x22, 0x63, 0x61, 0x73, 0x3A, 0x62, 0x69, 0x6E, 0x72,
	0x6F, 0x6D, 0x20, 0x70, 0x61, 0x72, 0x74, 0x20, 0x33, 0x20, 0x22, 0x2C, 0x72, 0x0D, 0x00, 0x5B, 0x43, 0x61, 0x73, 0x4C, 0x69, 0x6E, 0x6B, 0x33, 0x5D,
	0x20, 0x4C, 0x6F, 0x61, 0x64, 0x69, 0x6E, 0x67, 0x20, 0x66, 0x69, 0x6C, 0x65, 0x2C, 0x20, 0x70, 0x6C, 0x65, 0x61, 0x73, 0x65, 0x20, 0x77, 0x61, 0x69,
	0x74, 0x2E, 0x2E, 0x2E, 0x00, 0x5B, 0x43, 0x61, 0x73, 0x4C, 0x69, 0x6E, 0x6B, 0x33, 0x5D, 0x20, 0x4C, 0x6F, 0x61, 0x64, 0x69, 0x6E, 0x67, 0x20, 0x66,
	0x61, 0x69, 0x6C, 0x65, 0x64, 0x3A, 0x20, 0x43, 0x52, 0x43, 0x20, 0x45, 0x52, 0x52, 0x4F, 0x52, 0x21, 0x00, 0xF3, 0x2A, 0x03, 0x90, 0xED, 0x5B, 0x05,
	0x90, 0xEB, 0x37, 0x3F, 0xED, 0x52, 0xE5, 0xC1, 0x21, 0x79, 0x91, 0xAF, 0xF5, 0xF1, 0x86, 0x23, 0x0B, 0xF5, 0x79, 0xB7, 0x20, 0xF7, 0x78, 0xB7, 0x20,
	0xF3, 0xF1, 0x47, 0x21, 0x09, 0x90, 0x7E, 0xB8, 0xCA, 0xDF, 0x90, 0xFB, 0xCD, 0x6C, 0x00, 0x3E, 0x0F, 0x21, 0xE9, 0xF3, 0x77, 0x3E, 0x08, 0x23, 0x77,
	0x23, 0x77, 0xCD, 0x62, 0x00, 0xAF, 0xCD, 0xC3, 0x00, 0xCD, 0xCF, 0x00, 0x21, 0x01, 0x01, 0xCD, 0xC6, 0x00, 0x11, 0x50, 0x90, 0x1A, 0xB7, 0x28, 0x0A,
	0x13, 0xCD, 0xA2, 0x00, 0x24, 0xCD, 0xC6, 0x00, 0x18, 0xF2, 0x21, 0x03, 0x01, 0xCD, 0xC6, 0x00, 0xCD, 0xC0, 0x00, 0xCD, 0x56, 0x01, 0xC9, 0xFB, 0xCD,
	0x6C, 0x00, 0x3E, 0x0F, 0x21, 0xE9, 0xF3, 0x77, 0x3E, 0x04, 0x23, 0x77, 0x23, 0x77, 0xCD, 0x62, 0x00, 0xAF, 0xCD, 0xC3, 0x00, 0xCD, 0xCC, 0x00, 0x21,
	0x01, 0x01, 0xCD, 0xC6, 0x00, 0x11, 0x28, 0x90, 0x1A, 0xB7, 0x28, 0x0A, 0x13, 0xCD, 0xA2, 0x00, 0x24, 0xCD, 0xC6, 0x00, 0x18, 0xF2, 0x21, 0x03, 0x01,
	0xCD, 0xC6, 0x00, 0xCD, 0x56, 0x01, 0xF3, 0x21, 0xF0, 0xFB, 0x22, 0xF8, 0xF3, 0x22, 0xFA, 0xF3, 0x21, 0x0A, 0x90, 0x11, 0xF0, 0xFB, 0x01, 0x1D, 0x00,
	0xED, 0xB0, 0x21, 0x0D, 0xFC, 0x22, 0xF8, 0xF3, 0xF3, 0x3A, 0xFF, 0xFF, 0x2F, 0xF5, 0x4F, 0xE6, 0xF0, 0x47, 0x79, 0x0F, 0x0F, 0x0F, 0x0F, 0xE6, 0x0F,
	0xB0, 0x32, 0xFF, 0xFF, 0xDB, 0xA8, 0xF5, 0xE6, 0xF0, 0x47, 0x0F, 0x0F, 0x0F, 0x0F, 0xE6, 0x0F, 0xB0, 0xD3, 0xA8, 0x2A, 0x03, 0x90, 0xED, 0x5B, 0x05,
	0x90, 0xEB, 0x37, 0x3F, 0xED, 0x52, 0x44, 0x4D, 0x21, 0x79, 0x91, 0xED, 0x5B, 0x03, 0x90, 0xED, 0xB0, 0xF1, 0xD3, 0xA8, 0xF1, 0x32, 0xFF, 0xFF, 0xFB,
	0xC9, 0x00
	};

static unsigned char	ROM49KLoader3[247] = {
	0xC3, 0x30, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5B, 0x43, 0x61, 0x73, 0x4C, 0x69, 0x6E, 0x6B, 0x33, 0x5D, 0x20, 0x4C, 0x6F, 0x61, 0x64,
	0x69, 0x6E, 0x67, 0x20, 0x66, 0x61, 0x69, 0x6C, 0x65, 0x64, 0x3A, 0x20, 0x43, 0x52, 0x43, 0x20, 0x45, 0x52, 0x52, 0x4F, 0x52, 0x21, 0x00, 0xF3, 0x2A,
	0x03, 0x90, 0xED, 0x5B, 0x05, 0x90, 0xEB, 0x37, 0x3F, 0xED, 0x52, 0xE5, 0xC1, 0x21, 0xF7, 0x90, 0xAF, 0xF5, 0xF1, 0x86, 0x23, 0x0B, 0xF5, 0x79, 0xB7,
	0x20, 0xF7, 0x78, 0xB7, 0x20, 0xF3, 0xF1, 0x47, 0x21, 0x09, 0x90, 0x7E, 0xB8, 0xCA, 0x99, 0x90, 0xFB, 0xCD, 0x6C, 0x00, 0x3E, 0x0F, 0x21, 0xE9, 0xF3,
	0x77, 0x3E, 0x08, 0x23, 0x77, 0x23, 0x77, 0xCD, 0x62, 0x00, 0xAF, 0xCD, 0xC3, 0x00, 0xCD, 0xCF, 0x00, 0x21, 0x01, 0x01, 0xCD, 0xC6, 0x00, 0x11, 0x0A,
	0x90, 0x1A, 0xB7, 0x28, 0x0A, 0x13, 0xCD, 0xA2, 0x00, 0x24, 0xCD, 0xC6, 0x00, 0x18, 0xF2, 0x21, 0x03, 0x01, 0xCD, 0xC6, 0x00, 0xCD, 0xC0, 0x00, 0xCD,
	0x56, 0x01, 0xC9, 0xF3, 0x3A, 0xFF, 0xFF, 0x2F, 0x4F, 0xE6, 0xF0, 0x47, 0x79, 0x0F, 0x0F, 0x0F, 0x0F, 0xE6, 0x0F, 0xB0, 0x32, 0xFF, 0xFF, 0xDB, 0xA8,
	0xE6, 0xF0, 0x47, 0x0F, 0x0F, 0x0F, 0x0F, 0xE6, 0x0F, 0xB0, 0xF5, 0xD3, 0xA8, 0x21, 0xD3, 0x90, 0x11, 0xF8, 0x90, 0xEB, 0x37, 0x3F, 0xED, 0x52, 0x44,
	0x4D, 0x21, 0xD3, 0x90, 0x11, 0x60, 0xF5, 0xD5, 0xED, 0xB0, 0xC9, 0x2A, 0x07, 0x90, 0xE5, 0x2A, 0x03, 0x90, 0xED, 0x5B, 0x05, 0x90, 0xEB, 0x37, 0x3F,
	0xED, 0x52, 0x44, 0x4D, 0x21, 0xF7, 0x90, 0xED, 0x5B, 0x03, 0x90, 0xED, 0xB0, 0xE1, 0xF1, 0xE6, 0xFC, 0xD3, 0xA8, 0xFB, 0xE9, 0x00
	};

static unsigned char	ROM49KLoader3Rst[376] = {
	0xC3, 0x30, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5B, 0x43, 0x61, 0x73, 0x4C, 0x69, 0x6E, 0x6B, 0x33, 0x5D, 0x20, 0x4C, 0x6F, 0x61, 0x64,
	0x69, 0x6E, 0x67, 0x20, 0x66, 0x61, 0x69, 0x6C, 0x65, 0x64, 0x3A, 0x20, 0x43, 0x52, 0x43, 0x20, 0x45, 0x52, 0x52, 0x4F, 0x52, 0x21, 0x00, 0xF3, 0x2A,
	0x03, 0x90, 0xED, 0x5B, 0x05, 0x90, 0xEB, 0x37, 0x3F, 0xED, 0x52, 0xE5, 0xC1, 0x21, 0x78, 0x91, 0xAF, 0xF5, 0xF1, 0x86, 0x23, 0x0B, 0xF5, 0x79, 0xB7,
	0x20, 0xF7, 0x78, 0xB7, 0x20, 0xF3, 0xF1, 0x47, 0x21, 0x09, 0x90, 0x7E, 0xB8, 0xCA, 0x99, 0x90, 0xFB, 0xCD, 0x6C, 0x00, 0x3E, 0x0F, 0x21, 0xE9, 0xF3,
	0x77, 0x3E, 0x08, 0x23, 0x77, 0x23, 0x77, 0xCD, 0x62, 0x00, 0xAF, 0xCD, 0xC3, 0x00, 0xCD, 0xCF, 0x00, 0x21, 0x01, 0x01, 0xCD, 0xC6, 0x00, 0x11, 0x0A,
	0x90, 0x1A, 0xB7, 0x28, 0x0A, 0x13, 0xCD, 0xA2, 0x00, 0x24, 0xCD, 0xC6, 0x00, 0x18, 0xF2, 0x21, 0x03, 0x01, 0xCD, 0xC6, 0x00, 0xCD, 0xC0, 0x00, 0xCD,
	0x56, 0x01, 0xC9, 0xF3, 0x3A, 0xFF, 0xFF, 0x2F, 0x4F, 0xE6, 0xF0, 0x47, 0x79, 0x0F, 0x0F, 0x0F, 0x0F, 0xE6, 0x0F, 0xB0, 0x32, 0xFF, 0xFF, 0xDB, 0xA8,
	0xE6, 0xF0, 0x47, 0x0F, 0x0F, 0x0F, 0x0F, 0xE6, 0x0F, 0xB0, 0xF5, 0xD3, 0xA8, 0x21, 0x78, 0x91, 0x11, 0x5C, 0x91, 0x7E, 0x12, 0x23, 0x11, 0x60, 0x91,
	0x7E, 0x12, 0x23, 0x11, 0x64, 0x91, 0x7E, 0x12, 0x2A, 0x07, 0x90, 0xE5, 0x22, 0x67, 0x91, 0x7E, 0x11, 0x6B, 0x91, 0x12, 0x23, 0x7E, 0x11, 0x6F, 0x91,
	0x12, 0x23, 0x7E, 0x11, 0x73, 0x91, 0x12, 0xE1, 0x3E, 0xC3, 0x77, 0x23, 0xE5, 0x21, 0x7C, 0x91, 0x11, 0x00, 0x80, 0x37, 0x3F, 0xED, 0x52, 0xED, 0x5B,
	0x05, 0x90, 0x37, 0x3F, 0xED, 0x5A, 0xEB, 0xD5, 0x21, 0x57, 0x91, 0x01, 0x21, 0x00, 0xED, 0xB0, 0x2A, 0x05, 0x90, 0x11, 0x25, 0x00, 0x37, 0x3F, 0xED,
	0x5A, 0x22, 0x05, 0x90, 0xD1, 0xE1, 0x7B, 0x77, 0x23, 0x7A, 0x77, 0x21, 0x35, 0x91, 0x11, 0x58, 0x91, 0xEB, 0x37, 0x3F, 0xED, 0x52, 0x44, 0x4D, 0x21,
	0x35, 0x91, 0x11, 0x60, 0xF5, 0xD5, 0xED, 0xB0, 0xC9, 0x2A, 0x03, 0x90, 0xED, 0x5B, 0x05, 0x90, 0xEB, 0x37, 0x3F, 0xED, 0x52, 0x44, 0x4D, 0x21, 0x78,
	0x91, 0xED, 0x5B, 0x03, 0x90, 0xED, 0xB0, 0xF1, 0xE6, 0xFC, 0xD3, 0xA8, 0xF7, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF3, 0x21, 0x00, 0x80, 0x3E, 0x00, 0x77,
	0x23, 0x3E, 0x00, 0x77, 0x23, 0x3E, 0x00, 0x77, 0x21, 0x00, 0x00, 0xE5, 0x3E, 0x00, 0x77, 0x23, 0x3E, 0x00, 0x77, 0x23, 0x3E, 0x00, 0x77, 0xE1, 0xE9,
	0x00
	};


// Messages
static char	szCaption[]="The CasLink Project. Created by Alexey Podrezov, 1999-2022";
static char	szTitle1[]="\nCasLink Data-to-Audio Encoder Utility. Version 3.2\nCopyright (c) 1999-2022 Alexey Podrezov. All rights reserved.\n";
static char szTitle2[]="\n This utility encodes files that are transfered via the MSX cassette\n interface with the help of most common sound hardware:\n mobile phone, PC sound card, CD or MP3 player.\n\n Supported formats: BAS (tokenized/detokenized), SCR (screenshots)\n                    BIN (8/16/24 kb), ROM (8/16/24/32/49 kb)\n";

static char	FileFormat[][50] = {
	"BAS (tokenized Basic program)",
	"BIN (binary program)",
	"ROM (cartridge image)",
	"ASC (detokenized Basic program)",
	"unknown format"
	};

static char szHelp[]=		"\n Usage: CasLink3 <key> <file_name>\n\n  Keys:  /E  - encode Basic or binary file into WAV and MP3 files\n         /R  - encode Basic or binary file into WAV and MP3 files, reset to start\n         /M  - encode multiple files (maximum 20) into WAV and MP3 files\n         /?  - this help screen\n\n  file_name  - name(s) of input file(s), maximum 12 characters (filename.ext)\n\n  Examples:\n            CasLink3 /e File1.rom\n            CasLink3 /r File1.rom\n            CasLink3 /m File1.rom File2.rom\n            CasLink3 /m File1.bas File2.rom File3.rom\n";
static char szNoAction[]=	"\n To get help on command line options use /? key...\n\n";
static char szEncSuccMsg1[]="\n The output WAV file was created successfully!";
static char szEncSuccMsg2[]="\n The output files were created successfully!";
static char szDecSuccMsg[]=	"\n All files have been successfully decoded!\n";
static char szFinalMsg[]=	"\n Have a nice day!\n Please send your feedback to CasLink3 author:  alexey.podrezov@gmail.com\n\n";
static char szSpeed[]=		"\n  Select MSX cassette I/O speed: [1] 1200 baud, [2] 2400 baud, [3] 3000 baud - ";
static char szQuality[]=	"\n  Select WAV sampling rate: [1] 8 bit/mono/11 kHz; [2] 16 bit/stereo/44 kHz - ";
static char szInvertedWF[]=	"\n  Select waveform type: [1] Normal, [2] Inverted - ";
static char szConvert[]=	"\n  Would you also like to get MP3 file in addition to WAV [Y/N] - ";
static char szMP3Kbps[]=	"   Select MP3 output bitrate: [1] 192 kbps, [2] 256 kbps, [3] 320 kbps - ";
static char szOverwrite[]=	"\n ATTENTION: Overwrite previously created WAV and MP3 files ? [Y/N] - ";
static char szTopSpeedSel[]="\n NOTE: Not all MSX computers support 3000 baud cassette I/O speed. If MP3 file\n       playback causes \"Device I/O error\" on MSX, try to increase MP3 bitrate.\n       Also certain sound hardware may not play 3000 baud files correctly.\n";
static char szCreateOutFile[]=	"\n Creating output file \"%s\". Please wait...\n";
static char szOverwrWarning[]=	"\n WARNING: File with this name already exists. Overwrite ? [Y/N] - ";
static char szConvertToCD[]="\n Converting WAV file into 16 bit/stereo/44 kHz format...\n";
static char szNoLameFiles[]="\n WARNING: Lame encoder is not found, MP3 file will not be created...\n";
static char szCreateMP3[]=	" Creating MP3 output, this may take a while. Please wait...\n";
static char szWavCopyrMsg[]=" *** This WAV file was produced by CasLink3 v3.2 *** ";
static char BatCmdLine[]=	"lame.exe -q 0 -b %d -k -m m --cbr --noath --tt \"CasLink3: %s (MSX %d baud) %d kbps\" --tc \"This MP3 file was produced by CasLink3 v3.2\" %s.wav %s.mp3";

// Error messages
static char	ErrorList[][80] = {
	" ERROR: Incorrect parameter passed to command line...\n\n",						// 1
	" ERROR: Insufficient command line information. Need more options...\n\n",			// 2
	" ERROR: Incorrect value specified...\n\n",											// 3
	" ERROR: Failed to allocate memory for output buffer...\n\n", 						// 4
	" ERROR: Failed to allocate memory for input buffer...\n\n", 						// 5
	" ERROR: Failed to open input file...\n\n", 										// 6
	" ERROR: Failed to manipulate input file pointer...\n\n", 							// 7
	" ERROR: ROMs with mappers are not supported...\n\n", 								// 8
	" ERROR: Failed to read input file...\n\n", 										// 9
	" ERROR: Input file format is not supported...\n\n", 								// 10
	" CANCEL: Overwrite request denied by user...\n\n", 								// 11
	" ERROR: Failed to create output file...\n\n", 		 								// 12
	" ERROR: Failed to write to output file...\n\n", 		 							// 13
	" STOP: This type of 32kb ROM is not supported...\n\n", 	  						// 14
	" STOP: This type of file is not supported in multi-file mode...\n\n", 				// 15
	" STOP: Unknown file format: conversion is not possible...\n\n", 				 	// 16
	" STOP: Basic program can't be loaded after binary in multi-file mode...\n\n",		// 17
	" ERROR: Failed to convert WAV file...\n\n", 		 								// 18
	" ERROR: Failed to play the created WAV file...\n\n", 								// 19
	" ERROR: The input file is not a WAV file...\n\n",	 								// 20
	" ERROR: The input WAV file should be 16 bit/stereo/44 kHz...\n\n",	 				// 21
	" ERROR: Failed to convert to MP3 file...\n\n", 	 								// 22
	" STOP: The file of this type and size is not supported...\n\n",					// 23
	" ERROR: Wrong CR+LF character sequence in the input ASCII file...\n\n",			// 24
	" ERROR: BIN file header contains conflicting information...\n\n",					// 25
	""
   };

// Subroutine declaration
int	WriteDataByte(unsigned char);
int	WriteServiceByte(unsigned char);
int WriteHeaderByte(unsigned char*);
int ConvertToCDQuality(void);
int ConvertToRDQuality(void);
void ExitOnError(int ErrorNum);
void CleanUp(void);
void EncodeSingleFile(void);
void EncodeMultipleFiles(int);
void PrimarySetup(void);
void ConvertOutputToMP3(void);
