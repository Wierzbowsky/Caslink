.Z80

; BLOAD MODULE FOR MULTIFILE MODE (FOR CASLINK3 PROJECT)
; COPYRIGHT (C) 1999-2016 ALEXEY PODREZOV

	ASEG
	ORG	8200h

START:	JP	START1

STARTA:	DW	00
ENDA:	DW	00
EXECA:	DW	00
CRC:	DB	00

LOADCMD:DB	01EH
	DB	"bload"
	DB	34
	DB	"cas:binrom part 1 "
	DB	34
	DB	",r"
	DB	13,0

CASLSTR:DB	"[CasLink3] Loading file, please wait...",0

CASERR:	DB	"[CasLink3] Loading failed: CRC ERROR!",0


START1:	DI
	LD	HL,(STARTA)
      	LD	DE,(ENDA)
	EX	DE,HL
	SCF
	CCF
	SBC	HL,DE
	PUSH	HL
	POP	BC
	LD	HL,ROMCODE
        XOR	A
	PUSH	AF
START2:	POP	AF
	ADD	A,(HL)
	INC	HL
	DEC	BC
	PUSH	AF
	LD	A,C
	OR	A
	JR	NZ,START2
	LD	A,B
	OR	A
	JR	NZ,START2
	POP	AF
	LD	B,A
	LD	HL,CRC
	LD	A,(HL)
	CP	B
	JP	Z,START5	

CRCERR:	EI
	CALL	006CH		; set screen 0
	LD	A,0FH
	LD	HL,0F3E9H
	LD	(HL),A
	LD	A,8
	INC	HL
	LD	(HL),A
	INC	HL
	LD	(HL),A
	CALL	0062H		; set color 15,8,8
	XOR	A
	CALL	00C3H		; clear screen
	CALL	00CFH		; unhide functional keys
	LD	HL,0101H
	CALL	00C6H		; set cursor position to 1:1
	LD	DE,CASERR
START3:	LD	A,(DE)
	OR	A
	JR	Z,START4
	INC	DE
	CALL	00A2H		; display character
	INC	H
	CALL	00C6H		; set next position
	JR	START3

START4:	LD	HL,0103H
	CALL	00C6H		; set cursor position to 1:3
	CALL	00C0H		; beep
	CALL	0156H		; clears keyboard buffer
	EI
	RET

START5:	NOP
	NOP			; to make patching easier
	EI
	CALL	006CH		; set screen 0
	LD	A,0FH
	LD	HL,0F3E9H
	LD	(HL),A
	LD	A,4
	INC	HL
	LD	(HL),A
	INC	HL
	LD	(HL),A
	CALL	0062H		; set color 15,4,4
	XOR	A
	CALL	00C3H		; clear screen
	CALL	00CCH		; hide functional keys
	LD	HL,0101H
	CALL	00C6H		; set cursor position to 1:1
	LD	DE,CASLSTR
START6:	LD	A,(DE)
	OR	A
	JR	Z,START7
	INC	DE
	CALL	00A2H		; display character
	INC	H
	CALL	00C6H		; set next position
	JR	START6

START7:	LD	HL,0103H
	CALL	00C6H		; set cursor position to 1:3
	CALL	0156H		; clears keyboard buffer
	DI
	LD	HL,0FBF0H
	LD	(0F3F8H),HL
	LD	(0F3FAH),HL
	LD	HL,LOADCMD
	LD	DE,0FBF0H
	LD	BC,29
	LDIR			; send command to buffer
	LD	HL,0FBF0H+29
	LD	(0F3F8H),HL
	NOP
	NOP

LOADROM:DI
	LD	HL,(EXECA)
	PUSH	HL
	LD	HL,ROMCODE
	LD	DE,(STARTA)
	LD	A,H
	CP	D
	JR	C,START9	; target area lower than destination address?
	JR	NZ,START8
	LD	A,L
	CP	E
	JR	C,START9	; target area lower than destination address?

START8:	LD	HL,STARTI	; incremental transfer routine
      	LD	DE,STARTD+1
	EX	DE,HL
	SCF
	CCF
	SBC	HL,DE
	LD	B,H
	LD	C,L
	LD	HL,STARTI
	LD	DE,0F560H
	PUSH	DE
	LDIR
	RET

START9:	LD	HL,STARTD	; decremental transfer routine
      	LD	DE,ROMCODE+1
	EX	DE,HL
	SCF
	CCF
	SBC	HL,DE
	LD	B,H
	LD	C,L
	LD	HL,STARTD
	LD	DE,0F560H
	PUSH	DE
	LDIR
	RET

STARTI:	LD	HL,(STARTA)
      	LD	DE,(ENDA)
	EX	DE,HL
	SCF
	CCF
	SBC	HL,DE
	LD	B,H
	LD	C,L
	LD	HL,ROMCODE
	LD	DE,(STARTA)
	INC	BC
	LDIR
	EI
	RET
	NOP

STARTD:	LD	HL,(STARTA)
      	LD	DE,(ENDA)
	EX	DE,HL
	SCF
	CCF
	SBC	HL,DE
	LD	B,H
	LD	C,L
	LD	HL,(STARTA)
	SCF
	CCF
	ADC	HL,BC		; end of data at target address
	EX	DE,HL
	LD	HL,ROMCODE
	SCF
	CCF
	ADC	HL,BC		; end of data at source address
	INC	BC
	LDDR
	EI
	RET
	NOP

ROMCODE:

END

